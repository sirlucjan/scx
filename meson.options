option('bpf_clang', type: 'string', value: 'clang',
       description: 'clang to use when compiling .bpf.c')
option('bpftool', type: 'string',
       description: 'bpftool to use when generating .bpf.skel.h. By default, bpftool is automatically downloaded and built during setup. To use an existing bpftool binary, point this to the bpftool path or set it to "disabled" to have meson try to find it automatically')
option('libbpf_a', type: 'string',
       description: 'By default, libbpf is automatically downloaded and built during setup. To use an existing static library, point this to the libbpf.a file or set it to "disabled" to use dynamic linking')
option('libbpf_h', type: 'array',
       description: 'libbpf header directories, only meaningful with libbpf_a option')
option('cargo', type: 'string', value: 'cargo',
       description: 'cargo to use when building rust sub-projects')
option('cargo_home', type: 'string',
       description: 'CARGO_HOME env to use when invoking cargo')
option('offline', type: 'boolean', value: 'false',
       description: 'Compilation step should not access the internet')
option('enable_rust', type: 'boolean', value: 'true',
       description: 'Enable rust sub-projects')
option('kernel', type: 'string', value: 'vmlinuz',
       description: 'kernel image used to test schedulers')
option('kernel_headers', type: 'string', value: '',
       description: 'kernel headers to build the schedulers')
option(
  'systemd',
  type: 'feature',
  value: 'auto',
  description: 'sd-notify support via libsystemd and install systemd unit files'
)
option(
  'openrc',
  type: 'feature',
  value: 'auto',
  description: 'openrc init.d service file'
)
option(
  'libalpm',
  type: 'feature',
  value: 'auto',
  description: 'install pacman hooks'
)
